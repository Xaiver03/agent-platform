name: 🚀 Deploy AI Agent Platform

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        default: 'production'
        type: choice
        options:
          - production

jobs:
  deploy:
    name: 🌐 Deploy to Production
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: 📂 Checkout Repository
      uses: actions/checkout@v4
      
    - name: ⚙️ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 📦 Install Dependencies
      run: npm ci
      
    - name: 🔨 Build Application
      run: npm run build
      
    - name: 🗄️ Generate Prisma Client
      run: npx prisma generate
      
    - name: 📋 Create Deployment Package
      run: |
        mkdir -p deploy-package
        cp -r .next deploy-package/
        cp -r public deploy-package/
        cp -r prisma deploy-package/
        cp -r components deploy-package/
        cp -r app deploy-package/
        cp -r lib deploy-package/ || true
        cp package.json deploy-package/
        cp package-lock.json deploy-package/
        cp next.config.js deploy-package/
        cp tailwind.config.js deploy-package/
        cp tsconfig.json deploy-package/
        cp ecosystem.config.js deploy-package/
        cp .env.production deploy-package/
        
    - name: 🚀 Deploy to Server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.PORT }}
        script: |
          set -e
          echo "🚀 Starting deployment..."
          
          # 进入项目目录
          cd /www/wwwroot/mpai.openpenpal.com
          
          # 备份当前版本
          if [ -d "backup-$(date +%Y%m%d)" ]; then
            rm -rf "backup-$(date +%Y%m%d)"
          fi
          mkdir -p "backup-$(date +%Y%m%d)"
          cp -r .next "backup-$(date +%Y%m%d)/" 2>/dev/null || true
          
          # 从 GitHub 拉取最新代码
          echo "📥 Pulling latest code..."
          git pull origin main || git pull origin master
          
          # 安装依赖
          echo "📦 Installing dependencies..."
          npm ci --only=production --silent
          
          # 构建应用
          echo "🔨 Building application..."
          npm run build
          
          # 生成 Prisma 客户端
          echo "🗄️ Generating Prisma client..."
          npx prisma generate
          
          # 数据库迁移（安全的）
          echo "🔄 Database migration..."
          npx prisma db push
          
          # 设置权限
          echo "🔐 Setting permissions..."
          chown -R www:www /www/wwwroot/mpai.openpenpal.com
          chmod -R 755 /www/wwwroot/mpai.openpenpal.com
          
          # 重启 PM2 应用
          echo "🔄 Restarting application..."
          pm2 reload ai-agent-platform || pm2 start ecosystem.config.js
          
          # 检查应用状态
          echo "📊 Checking application status..."
          sleep 3
          pm2 status ai-agent-platform
          
          echo "✅ Deployment completed successfully!"
          
    - name: 🔍 Health Check
      run: |
        echo "🏥 Performing health check..."
        sleep 10
        curl -f https://mpai.openpenpal.com || exit 1
        echo "✅ Health check passed!"
        
    - name: 📬 Notify Success
      if: success()
      run: |
        echo "🎉 Deployment to production completed successfully!"
        echo "🌐 Site: https://mpai.openpenpal.com"
        echo "⚙️ Admin: https://mpai.openpenpal.com/admin"